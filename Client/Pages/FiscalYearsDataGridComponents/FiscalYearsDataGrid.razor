@using AwqafBlazor.Shared.DTOs
@inject HttpClient Http

@if (YearList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p>Total Items: @TotalItems</p>
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Year</th>
                <th>Start Date</th>
                <th>End Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var year in YearList.FiscalYears)
            {
                <tr>
                    <td>@year.FiscalYearId</td>
                    <td>@year.YearDescription</td>
                    <td>@year.StartDate.ToShortDateString()</td>
                    <td>@year.EndDate.ToShortDateString()</td>
                </tr>
            }
        </tbody>
    </table>
    <p>Page @Page of @TotalPages.</p>

    <ul class="pagination">
        <li><button type="button" @onclick="PreviousPageClick" class="btn">&laquo;</button></li>
        @for (var i = 1; i <= TotalPages; i++)
        {
            var currentIndex = i;
            @if (i == Page)
            {
                <li><span class="btn btn-primary">@i</span></li>
            }
            else
            {
                <li><button type="button" class="btn" @onclick="@(() => PageNumberClick(currentIndex))">@i</button></li>
            }
        }
        <li><button type="button" @onclick="NextPageClick" class="btn">&raquo;</button></li>
    </ul>
}

@code {
    protected FiscalYearListDTO YearList;

    [Parameter]
    public int Page { get; set; } = 1;

    [Parameter]
    public int ItemsPerPage { get; set; } = 20;

    int TotalItems { get; set; }
    int TotalPages { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GetFiscalYearData();
        Page = YearList.CurrentPage;
        TotalPages = YearList.TotalPages;
        TotalItems = YearList.TotalItems;
    }

    protected async Task GetFiscalYearData()
    {
        YearList = await Http.GetJsonAsync<FiscalYearListDTO>($"api/FiscalYears?page={Page}&itemsPerPage={ItemsPerPage}");
    }

    protected async Task NextPageClick()
    {
        if (Page < TotalPages)
        {
            Page++;
            await GetFiscalYearData();
            StateHasChanged();
        }
    }

    protected async Task PreviousPageClick()
    {
        if (Page > 1)
        {
            Page--;
            await GetFiscalYearData();
            StateHasChanged();
        }
    }

    protected async Task PageNumberClick(int pageNumber)
    {
        Page = pageNumber;
        await GetFiscalYearData();
        StateHasChanged();
    }
}
